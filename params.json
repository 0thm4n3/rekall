{"name":"Rekall Memory Forensic Framework","tagline":"We can remember it for you wholesale!","body":"# Rekall Memory Forensic Framework\r\n\r\nThe Rekall Framework is a completely open collection of tools, implemented in\r\nPython under the GNU General Public License, for the extraction of digital\r\nartifacts from volatile memory (RAM) samples.  The extraction techniques are\r\nperformed completely independent of the system being investigated but offer\r\nvisibilty into the runtime state of the system. The framework is intended to\r\nintroduce people to the techniques and complexities associated with extracting\r\ndigital artifacts from volatile memory samples and provide a platform for\r\nfurther work into this exciting area of research.\r\n\r\nThe Rekall distribution is available from:\r\n[https://code.google.com/p/rekall/](https://code.google.com/p/rekall/)\r\nRekall should run on any platform that supports\r\nPython ([http://www.python.org](http://www.python.org))\r\n\r\nRekall supports investigations of the following x86 bit memory images:\r\n\r\n* Microsoft Windows XP Service Pack 2 and 3\r\n* Microsoft Windows 7 Service Pack 0 and 1\r\n* Microsoft Windows 8 and 8.1\r\n* Linux Kernels 2.6.24 to 3.10.\r\n* OSX 10.6-10.8.\r\n\r\nRekall also provides a complete memory sample acquisition capability for all\r\nmajor operating systems (see the tools directory).\r\n\r\n## Quick start\r\n\r\nRekall is available as a python package installable via the pip package\r\nmanager. Simply type (for example on Linux):\r\n\r\n```\r\nsudo pip install rekall\r\n```\r\n\r\nYou might need to specifically allow pre-release software to be included (until\r\nRekall makes a major stable release):\r\n\r\n```\r\nsudo pip install --pre rekall\r\n```\r\n\r\nTo have all the dependencies installed. You still need to have python and pip\r\ninstalled first.\r\n\r\nTo be able to run the ipython notebook, the following are also required:\r\n\r\npip install Jinja2 MarkupSafe Pygments astroid pyzmq tornado wsgiref\r\n\r\nIf you want to use the yarascan plugin, install yara and yara-python\r\n([http://plusvic.github.io/yara/](http://plusvic.github.io/yara/)).\r\n\r\nFor windows, Rekall is also available as a self contained installer\r\npackage. Please check the download page for the most appropriate installer to\r\nuse ([http://downloads.rekall.googlecode.com/git/index.html](http://downloads.rekall.googlecode.com/git/index.html))\r\n\r\nMailing Lists\r\n=============\r\n\r\nMailing lists to support the users and developers of Rekall\r\ncan be found at the following address:\r\n\r\n    [rekall-discuss@googlegroups.com](mailto:rekall-discuss@googlegroups.com)\r\n\r\n## Licensing and Copyright\r\n\r\nCopyright (C) 2007-2011 Volatile Systems\r\nCopyright 2013 Google Inc. All Rights Reserved.\r\n\r\nAll Rights Reserved\r\n\r\nThis program is free software; you can redistribute it and/or\r\nmodify it under the terms of the GNU General Public License\r\nas published by the Free Software Foundation; either version 2\r\nof the License, or (at your option) any later version.\r\n\r\nThis program is distributed in the hope that it will be useful,\r\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\r\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\nGNU General Public License for more details.\r\n\r\nYou should have received a copy of the GNU General Public License\r\nalong with this program; if not, write to the Free Software\r\nFoundation, Inc., 59 Temple Place - Suite 330, Boston, MA\r\n02111-1307, USA.\r\n\r\n\r\n## Bugs and Support\r\n\r\nThere is no support provided with Rekall. There is NO\r\nwarranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR\r\nPURPOSE.\r\n\r\nIf you think you've found a bug, please report it at:\r\n\r\n    [http://code.google.com/p/rekall/issues](http://code.google.com/p/rekall/issues)\r\n\r\nIn order to help us solve your issues as quickly as possible,\r\nplease include the following information when filing a bug:\r\n\r\n* The version of rekall you're using\r\n* The operating system used to run rekall\r\n* The version of python used to run rekall\r\n* The suspected operating system of the memory image\r\n* The complete command line you used to run rekall\r\n\r\n## History\r\n\r\nIn December 2011, a new branch within the Volatility project was created to\r\nexplore how to make the code base more modular, improve performance, and\r\nincrease usability. The modularity allowed Volatility to be used in GRR, making\r\nmemory analysis a core part of a strategy to enable remote live forensics.  As a\r\nresult, both GRR and Volatility would be able to use each others’ strengths.\r\n\r\nOver time this branch has become known as the \"scudette\" branch or the\r\n\"Technology Preview\" branch.  It was always a goal to try to get these changes\r\ninto the main Volatility code base.  But, after two years of ongoing\r\ndevelopment, the \"Technology Preview\" was never accepted into the Volatility\r\ntrunk version.\r\n\r\nSince it seemed unlikely these changes would be incorporated in the future, it\r\nmade sense to develop the Technology Preview branch as a separate project. On\r\nDecember 13, 2013, the former branch was forked to create a new stand-alone\r\nproject named \"Rekall.” This new project incorporates changes made to streamline\r\nthe codebase so that Rekall can be used as a library. Methods for memory\r\nacquisition and other outside contributions have also been included that were\r\nnot in the Volatility codebase.\r\n\r\nRekall strives to advance the state of the art in memory analysis, implementing\r\nthe best algorithms currently available and a complete memory acquisition and\r\nanalysis solution for at least Windows, OSX and Linux.\r\n\r\n\r\n## More documentation\r\n\r\nFurther documentation is available at\r\n[http://docs.rekall.googlecode.com/git/index.html](http://docs.rekall.googlecode.com/git/index.html)","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}